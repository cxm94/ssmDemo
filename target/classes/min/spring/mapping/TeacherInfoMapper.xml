<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="min.spring.dao.TeacherInfoMapper" >
  <resultMap id="BaseResultMap" type="min.spring.vo.TeacherInfo" >
    <id column="teacher_code" property="teacherCode" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="teacher_tel" property="teacherTel" jdbcType="VARCHAR" />
    <result column="teacher_school" property="teacherSchool" jdbcType="VARCHAR" />
    <result column="teacher_grade" property="teacherGrade" jdbcType="INTEGER" />
    <result column="teacher_class" property="teacherClass" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    teacher_code, teacher_name, teacher_tel, teacher_school, teacher_grade, teacher_class
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teacher_info
    where teacher_code = #{teacherCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teacher_info
    where teacher_code = #{teacherCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="min.spring.vo.TeacherInfo" >
    insert into teacher_info (teacher_code, teacher_name, teacher_tel, 
      teacher_school, teacher_grade, teacher_class
      )
    values (#{teacherCode,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, #{teacherTel,jdbcType=VARCHAR}, 
      #{teacherSchool,jdbcType=VARCHAR}, #{teacherGrade,jdbcType=INTEGER}, #{teacherClass,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="min.spring.vo.TeacherInfo" >
    insert into teacher_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherCode != null" >
        teacher_code,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="teacherTel != null" >
        teacher_tel,
      </if>
      <if test="teacherSchool != null" >
        teacher_school,
      </if>
      <if test="teacherGrade != null" >
        teacher_grade,
      </if>
      <if test="teacherClass != null" >
        teacher_class,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherCode != null" >
        #{teacherCode,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        #{teacherTel,jdbcType=VARCHAR},
      </if>
      <if test="teacherSchool != null" >
        #{teacherSchool,jdbcType=VARCHAR},
      </if>
      <if test="teacherGrade != null" >
        #{teacherGrade,jdbcType=INTEGER},
      </if>
      <if test="teacherClass != null" >
        #{teacherClass,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="min.spring.vo.TeacherInfo" >
    update teacher_info
    <set >
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      </if>
      <if test="teacherSchool != null" >
        teacher_school = #{teacherSchool,jdbcType=VARCHAR},
      </if>
      <if test="teacherGrade != null" >
        teacher_grade = #{teacherGrade,jdbcType=INTEGER},
      </if>
      <if test="teacherClass != null" >
        teacher_class = #{teacherClass,jdbcType=INTEGER},
      </if>
    </set>
    where teacher_code = #{teacherCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="min.spring.vo.TeacherInfo" >
    update teacher_info
    set teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      teacher_school = #{teacherSchool,jdbcType=VARCHAR},
      teacher_grade = #{teacherGrade,jdbcType=INTEGER},
      teacher_class = #{teacherClass,jdbcType=INTEGER}
    where teacher_code = #{teacherCode,jdbcType=VARCHAR}
  </update>
  
  <select id="findBySchoolCode" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from teacher_info where teacher_school like "%"#{schoolCode,jdbcType=VARCHAR}"%"
  	
  </select>
</mapper>